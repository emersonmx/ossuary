#!/bin/bash
# shellcheck disable=SC2046

git init
skf gitignore/nextjs >.gitignore

npm init -y
npm pkg set private=true --json
npm pkg set scripts.build="next build"
npm pkg set scripts.start="next start"
npm pkg set scripts.dev="next dev --turbopack"
npm pkg set scripts.test="jest"
npm pkg set scripts.format="rustywind --write . && biome format --write ."
npm pkg set scripts.lint="rustywind --check-formatted . && biome check . && tsc --noEmit"

npm install --save \
    react \
    react-dom \
    next
npm install --save-dev \
    @biomejs/biome \
    @types/jest \
    @types/node \
    jest \
    jest-environment-jsdom \
    @testing-library/react \
    @testing-library/dom \
    @testing-library/jest-dom \
    typescript \
    ts-node \
    @types/react \
    @types/react-dom \
    @tailwindcss/postcss \
    tailwindcss \
    rustywind

shskf editorconfig/nodejs.sh
skf biome/biome.json >biome.json
skf jest/nextjs-jest.config.ts >jest.config.ts

shskf direnv/nodejs.sh
direnv allow

cat >next-env.d.ts <<'EOF'
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/app/api-reference/config/typescript for more information.
EOF

cat >next.config.ts <<'EOF'
import type { NextConfig } from "next";

const nextConfig: NextConfig = {
  /* config options here */
};

export default nextConfig;
EOF

cat >postcss.config.mjs <<'EOF'
const config = {
  plugins: ["@tailwindcss/postcss"],
};

export default config;
EOF

cat >tsconfig.json <<'EOF'
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
EOF

mkdir -p src/app
cat >src/app/globals.css <<'EOF'
@import "tailwindcss";
EOF

cat >src/app/layout.tsx <<'EOF'
import type { Metadata } from "next";
import "./globals.css";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body>
        {children}
      </body>
    </html>
  );
}
EOF

cat >src/app/page.tsx <<'EOF'
export default function Home() {
  return <h1>Hello World</h1>;
}
EOF

npm run format
